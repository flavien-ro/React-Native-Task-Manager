{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/flavien/EPITECH_TEK2/PROJET_HUB/React-Native-Task-Manager/task-manager/client/Components/taskManager/taskCreator.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport axios from 'axios';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport moment from 'moment';\nimport { Ionicons } from '@expo/vector-icons';\nvar ScreenHeight = Dimensions.get(\"window\").height + 100;\nexport default function CreateTask(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateBegin = _useState2[0],\n      setDateBegin = _useState2[1];\n\n  var _useState3 = useState(new Date(dateBegin.getTime() + 86400000)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dateEnd = _useState4[0],\n      setDateEnd = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      show = _useState10[0],\n      setShow = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showEnd = _useState12[0],\n      setShowEnd = _useState12[1];\n\n  var _route$params = route.params,\n      token = _route$params.token,\n      userId = _route$params.userId;\n\n  var createTask = function createTask() {\n    var dateToReplace = new Date(dateEnd);\n\n    if (dateBegin > dateEnd) {\n      dateToReplace = new Date(dateBegin.getTime() + 86400000);\n    }\n\n    var formatBegin = moment(dateBegin).format(\"YYYY-MM-DD\");\n    var formatEnd = moment(dateToReplace).format(\"YYYY-MM-DD\");\n    var data = JSON.stringify({\n      \"name\": title,\n      \"description\": description,\n      \"owner\": JSON.parse(userId),\n      \"begin\": formatBegin,\n      \"end\": formatEnd\n    });\n    var config = {\n      method: 'post',\n      url: config.API_URL + 'api/task/add-tasks',\n      headers: {\n        'auth-token': JSON.parse(token),\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      if (response.data.res) {\n        alert(response.data.res);\n        navigation.navigate('TaskManager');\n      } else {\n        alert(response.data);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var changeStart = function changeStart(event, selectedDate) {\n    var currentDate = selectedDate || dateBegin;\n\n    if (Platform.OS !== 'ios') {\n      setShow(!show);\n    }\n\n    setDateBegin(currentDate);\n  };\n\n  var changeEnd = function changeEnd(event, selectedDate) {\n    if (Platform.OS !== 'ios') {\n      setShowEnd(!showEnd);\n    }\n\n    var currentDate = selectedDate || dateEnd;\n    setDateEnd(currentDate);\n  };\n\n  return React.createElement(LinearGradient, {\n    colors: ['#4c669f', '#3b5998', '#192f6a'],\n    style: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.background,\n    enabled: true,\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.goBack,\n    onPress: function onPress() {\n      return navigation.navigate('TaskManager');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, React.createElement(Ionicons, {\n    style: {\n      marginRight: 10\n    },\n    name: \"return-down-back\",\n    size: 24,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontWeight: 'bold',\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \" Return to task manager \")), React.createElement(Text, {\n    style: {\n      top: '6%',\n      color: 'white',\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Create your task :\"), React.createElement(View, {\n    style: styles.taskCreator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'left',\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Title :\"), React.createElement(View, {\n    style: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    name: \"email\",\n    value: title,\n    onChangeText: function onChangeText(title) {\n      return setTitle(title);\n    },\n    placeholder: 'Title of the task',\n    autoCapitalize: \"none\",\n    clearButtonMode: \"while-editing\",\n    style: styles.txtInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  })), React.createElement(Text, {\n    style: {\n      textAlign: 'left',\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Description :\"), React.createElement(View, {\n    style: styles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    name: \"email\",\n    value: description,\n    onChangeText: function onChangeText(description) {\n      return setDescription(description);\n    },\n    placeholder: 'description of the task',\n    autoCapitalize: \"none\",\n    clearButtonMode: \"while-editing\",\n    multiline: true,\n    style: styles.txtInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  })), React.createElement(Text, {\n    style: {\n      textAlign: 'left',\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"Start :\"), Platform.OS !== 'ios' && React.createElement(Button, {\n    onPress: function onPress() {\n      return setShow(true);\n    },\n    title: \"Pick starting date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }), Platform.OS === \"ios\" && React.createElement(DateTimePicker, {\n    value: dateBegin,\n    dateFormat: \"day month year\",\n    mode: \"date\",\n    display: \"default\",\n    onChange: changeStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }), show && React.createElement(DateTimePicker, {\n    value: dateBegin,\n    dateFormat: \"day month year\",\n    mode: \"date\",\n    display: \"default\",\n    onChange: changeStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 27\n    }\n  }), Platform.OS !== 'ios' && React.createElement(Text, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, \"The starting date is : \", moment(dateBegin).format(\"DD/MM/YYYY\")), React.createElement(Text, {\n    style: {\n      textAlign: 'left',\n      marginBottom: 20,\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, \"End :\"), Platform.OS !== 'ios' && React.createElement(Button, {\n    onPress: function onPress() {\n      return setShowEnd(true);\n    },\n    title: \"Pick ending date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }), Platform.OS === \"ios\" && React.createElement(DateTimePicker, {\n    minimumDate: new Date(dateBegin.getTime() + 86400000),\n    value: dateEnd,\n    dateFormat: \"day month year\",\n    mode: \"date\",\n    display: \"default\",\n    onChange: changeEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }), Platform.OS !== 'ios' && React.createElement(Text, {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, \"The ending date is : \", dateBegin > dateEnd ? moment(new Date(dateBegin.getTime() + 86400000)).format(\"DD/MM/YYYY\") : moment(dateEnd).format(\"DD/MM/YYYY\")), showEnd && React.createElement(DateTimePicker, {\n    minimumDate: new Date(dateBegin.getTime() + 86400000),\n    value: dateEnd,\n    dateFormat: \"day month year\",\n    mode: \"date\",\n    display: \"default\",\n    onChange: changeEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: styles.buttonSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return createTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 27\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      textAlign: 'center',\n      fontSize: 18,\n      paddingBottom: 10,\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 31\n    }\n  }, \"Create Task\"))))))))));\n}\nvar styles = StyleSheet.create({\n  background: {\n    minHeight: ScreenHeight,\n    width: '100%',\n    marginBottom: 50\n  },\n  scrollView: {\n    flex: 1,\n    marginBottom: 100\n  },\n  container: {\n    flex: 1,\n    fontFamily: 'Montserrat',\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  title: {\n    top: '2%',\n    margin: 'auto',\n    width: '80%',\n    padding: 10\n  },\n  taskCreator: {\n    top: '10%',\n    width: '90%',\n    padding: 20,\n    minHeight: 50,\n    backgroundColor: 'white'\n  },\n  txtInput: {\n    borderWidth: 1,\n    borderColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 20\n  },\n  buttonSection: {\n    backgroundColor: '#3b5998',\n    marginVertical: 50,\n    borderRadius: 25\n  },\n  goBack: {\n    top: '2%',\n    left: -60,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 25\n  }\n});","map":{"version":3,"sources":["/home/flavien/EPITECH_TEK2/PROJET_HUB/React-Native-Task-Manager/task-manager/client/Components/taskManager/taskCreator.js"],"names":["React","useState","LinearGradient","axios","DateTimePicker","moment","Ionicons","ScreenHeight","Dimensions","get","height","CreateTask","route","navigation","Date","dateBegin","setDateBegin","getTime","dateEnd","setDateEnd","title","setTitle","description","setDescription","show","setShow","showEnd","setShowEnd","params","token","userId","createTask","dateToReplace","formatBegin","format","formatEnd","data","JSON","stringify","parse","config","method","url","API_URL","headers","then","response","res","alert","navigate","catch","error","console","log","changeStart","event","selectedDate","currentDate","Platform","OS","changeEnd","styles","background","scrollView","flexGrow","flex","container","goBack","marginRight","color","fontWeight","fontSize","top","taskCreator","textAlign","marginBottom","input","txtInput","marginTop","buttonSection","paddingBottom","paddingTop","StyleSheet","create","minHeight","width","fontFamily","display","alignItems","margin","padding","backgroundColor","borderWidth","borderColor","borderRadius","marginVertical","left","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Button, KeyboardAvoidingView, Platform, ScrollView, SafeAreaView, Dimensions } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport axios from 'axios';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport moment from 'moment';\nimport { Ionicons } from '@expo/vector-icons';\n\nlet ScreenHeight = Dimensions.get(\"window\").height + 100;\n\n\nexport default function CreateTask({ route, navigation }) {\n    const [dateBegin, setDateBegin] = useState(new Date())\n    const [dateEnd, setDateEnd] = useState(new Date(dateBegin.getTime() + 86400000))\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [show, setShow] = useState(false);\n    const [showEnd, setShowEnd] = useState(false);\n    const { token, userId } = route.params;\n\n    const createTask = () => {\n      var dateToReplace = new Date(dateEnd);\n        if (dateBegin > dateEnd) {\n          dateToReplace = new Date(dateBegin.getTime() + 86400000);\n        }\n        const formatBegin = moment(dateBegin).format(\"YYYY-MM-DD\")\n        const formatEnd = moment(dateToReplace).format(\"YYYY-MM-DD\")\n\n      var data = JSON.stringify({\"name\": title,\"description\": description, \"owner\": JSON.parse(userId), \"begin\": formatBegin,\n      \"end\": formatEnd});\n\n      var config = {\n        method: 'post',\n        url: config.API_URL + 'api/task/add-tasks',\n        headers: { \n          'auth-token': JSON.parse(token), \n          'Content-Type': 'application/json'\n        },\n        data : data\n      };\n      \n      axios(config)\n      .then(function (response) {\n        if (response.data.res) {\n          alert(response.data.res);\n          navigation.navigate('TaskManager')\n        } else {\n          alert(response.data);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    const changeStart = (event, selectedDate) => {\n      const currentDate = selectedDate || dateBegin;\n      if (Platform.OS !== 'ios') {\n          setShow(!show);\n      }\n      setDateBegin(currentDate);\n    };\n\n    const changeEnd = (event, selectedDate) => {\n      if (Platform.OS !== 'ios') {\n        setShowEnd(!showEnd);\n      }\n      const currentDate = selectedDate || dateEnd;\n      setDateEnd(currentDate);\n    };\n\n      return (\n        <LinearGradient\n        colors={['#4c669f', '#3b5998', '#192f6a']}\n        style={styles.background}>\n        <SafeAreaView style={styles.scrollView}>\n        <ScrollView style={{flexGrow: 1}}>\n        <KeyboardAvoidingView style={styles.background}\n          enabled\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={{ flex: 1 }}>\n          <View style={styles.background}>\n                <View style={styles.container}>\n                    <TouchableOpacity style={styles.goBack} onPress={() => navigation.navigate('TaskManager')}>\n                        <Ionicons style={{marginRight: 10}} name=\"return-down-back\" size={24} color=\"white\" />\n                        <Text style={{color: 'white', fontWeight: 'bold', fontSize: 16}}> Return to task manager </Text>\n                    </TouchableOpacity>\n                    <Text style={{top: '6%', color: 'white', fontSize: 30}}>Create your task :</Text>\n                    <View style={styles.taskCreator}>\n                        <Text style={{textAlign: 'left', marginBottom: 20}}>Title :</Text>\n                        <View style={styles.input}>\n                            <TextInput\n                                name=\"email\"\n                                value={title}\n                                onChangeText={(title) => setTitle(title)}\n                                placeholder={'Title of the task'}\n                                autoCapitalize='none'\n                                clearButtonMode='while-editing'\n                                style={styles.txtInput}\n                            />\n                        </View>\n                        <Text style={{textAlign: 'left', marginBottom: 20}}>Description :</Text>\n                        <View style={styles.input}>\n                            <TextInput\n                                name=\"email\"\n                                value={description}\n                                onChangeText={(description) => setDescription(description)}\n                                placeholder={'description of the task'}\n                                autoCapitalize='none'\n                                clearButtonMode='while-editing'\n                                multiline\n                                style={styles.txtInput}\n                            />\n                        </View>\n                        <Text style={{textAlign: 'left', marginBottom: 20}}>Start :</Text>\n                        {Platform.OS !== 'ios' &&\n                            <Button onPress={() => setShow(true)} title=\"Pick starting date\" />\n                        }\n                        {Platform.OS === \"ios\" &&\n                            <DateTimePicker \n                            value={dateBegin}\n                            dateFormat=\"day month year\"\n                            mode='date'\n                            display='default'\n                            onChange={changeStart} />\n                        }\n                        {show && \n                          <DateTimePicker \n                            value={dateBegin}\n                            dateFormat=\"day month year\"\n                            mode='date'\n                            display='default'\n                            onChange={changeStart} />\n                        }\n                        {Platform.OS !== 'ios' &&\n                            <Text style={{marginTop: 20}}>The starting date is : {moment(dateBegin).format(\"DD/MM/YYYY\")}</Text>\n                        }\n                        <Text style={{textAlign: 'left', marginBottom: 20, marginTop: 20}}>End :</Text>\n                        {Platform.OS !== 'ios' &&\n                            <Button onPress={() => setShowEnd(true)} title=\"Pick ending date\" />\n                        }\n                        {Platform.OS === \"ios\" &&\n                            <DateTimePicker \n                            minimumDate={new Date(dateBegin.getTime() + 86400000)}\n                            value={dateEnd}\n                            dateFormat=\"day month year\"\n                            mode='date'\n                            display='default'\n                            onChange={changeEnd} />\n                        }\n                        {Platform.OS !== 'ios' &&\n                            <Text style={{marginTop: 20}}>The ending date is : {dateBegin > dateEnd ? moment(new Date(dateBegin.getTime() + 86400000)).format(\"DD/MM/YYYY\") : moment(dateEnd).format(\"DD/MM/YYYY\")}</Text>\n                        }\n                        {showEnd &&\n                            <DateTimePicker \n                            minimumDate={new Date(dateBegin.getTime() + 86400000)}\n                            value={dateEnd}\n                            dateFormat=\"day month year\"\n                            mode='date'\n                            display='default'\n                            onChange={changeEnd} />\n                        }\n                        <View style={styles.buttonSection}>\n                          <TouchableOpacity onPress={() => createTask()}>\n                              <Text style={{color: 'white', textAlign: 'center', fontSize: 18, paddingBottom: 10, paddingTop: 10}} >Create Task</Text>\n                          </TouchableOpacity>\n                        </View>\n                    </View>\n                </View>\n          </View>\n          </KeyboardAvoidingView>\n          </ScrollView>\n          </SafeAreaView>\n          </LinearGradient>\n\n      );\n    }\n\nconst styles = StyleSheet.create({\n      background: {\n        minHeight: ScreenHeight,\n        width: '100%',\n        marginBottom: 50\n      },\n      scrollView: {\n        flex: 1,\n        marginBottom: 100\n      },\n      container: {\n        flex: 1,\n        fontFamily: 'Montserrat',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center'\n      },\n      title: {\n        top: '2%',\n        margin: 'auto',\n        width: '80%',\n        padding: 10,\n      },\n      taskCreator: {\n          top: '10%',\n          width: '90%',\n          padding: 20,\n          minHeight: 50,\n          backgroundColor: 'white',\n      },\n      txtInput: {\n        borderWidth: 1,\n        borderColor: 'blue',\n        padding: 10,\n        borderRadius: 5,\n        marginBottom: 20,\n      },\n      buttonSection: {\n        backgroundColor: '#3b5998',\n        marginVertical: 50,\n        borderRadius: 25,\n      },\n      goBack: {\n        top: '2%',\n        left: -60,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 25\n      },\n});\n    "]},"metadata":{},"sourceType":"module"}